---
import "../../styles/general.css";
import SingleLayout from "../../layouts/SingleLayout.astro";
import Breadcrumb from "../../components/Breadcrumb.astro";
import Blob from "../../components/Blob.astro";

// Laver statiske stier til hvert element i databasen
export async function getStaticPaths() {
  // Henter dataen med fetch
  const data = await fetch("https://bxfurhdhskcxflbxstzf.supabase.co/rest/v1/karrusel", {
    method: "GET",
    headers: {
      apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ4ZnVyaGRoc2tjeGZsYnhzdHpmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTA1MDMzNTMsImV4cCI6MjAyNjA3OTM1M30.LOhTm5mG10QgwCONoiEr4awaIvHkbSl4G1wxOgPX4Mk",
    },
  }).then((res) => res.json());

  //Benytter map til at lave en underside for hvert element i databasen
  return data.map((artist) => {
    return {
      // Bruger slugget fra database (artist.slug) og navngiver filen dét
      // Det første 'slug' henviser til det slug, som er i mit filnavn (som er [slug].astro)
      // Det næste 'slug' henviser til en kolonne i databasen
      params: { slug: artist.slug },

      props: { myData: artist },
    };
  });
}

// Definere en prop, som dataen der er fetchet
const { myData } = Astro.props;
console.log(myData);
---

<!---------------------------------------------------- HTML ----------------------------------------------------><!---------------------------------------------------- HTML ----------------------------------------------------><!---------------------------------------------------- HTML ----------------------------------------------------><!---------------------------------------------------- HTML ---------------------------------------------------->
<SingleLayout title={myData.name}>
  <Breadcrumb link={myData.slug}>{myData.name}</Breadcrumb>
  <section class="layout">
    <article class="info flex_col">
      <h1>{myData.name}</h1>
      <div class="flex_row">
        <p>{myData.day}</p>
        <img src="/svg/star.svg" alt="star symbol" class="star" />
        <p>{myData.time}</p>
        <img src="/svg/star.svg" alt="star symbol" class="star" />
        <p>{myData.stage}</p>
      </div>
    </article>

    <article class="play flex_col">
      <img src=`/img/${myData.image}` alt="Picture of artist" />
      <h5>{myData.song}</h5>
      <img src="/svg/player.svg" alt="Picture of artist" />
    </article>
    <div class="flex_col about_social">
      <article class="about flex_col">
        <h6>About</h6>
        <p>{myData.about}</p>
      </article>

      <article class="social flex_row">
        <img src="/svg/spotify.svg" alt="spotify icon" class="icon" />
        <img src="/svg/youtube.svg" alt="youtube icon" class="icon" />
        <img src="/svg/instagram.svg" alt="intagram icon" class="icon" />
      </article>
    </div>
  </section>
  <div class="background">
    <img class="blob_1" src="/svg/blob_single.svg" alt="blob" />
  </div>
</SingleLayout>

<!---------------------------------------------------- CSS ---------------------------------------------------->
<style>
  /********** Basics på  sections  **********/
  section {
    gap: var(--spacing_8);
    margin: var(--spacing_4);
    z-index: 2;
  }

  /********** Generel flex  **********/
  .flex_row {
    display: flex;
    flex-direction: row;
  }
  .flex_col {
    display: flex;
    flex-direction: column;
  }
  /* Til flex der skal være anderledes i desktop */
  .layout {
    display: flex;
    flex-direction: column;
  }

  /********** Styling a delementer **********/
  div {
    gap: var(--spacing_5);
    align-items: center;
  }

  .info {
    gap: var(--spacing_2);
  }

  .info p {
    font-size: 1.25rem;
  }

  .star {
    width: 15px;
  }

  .play {
    gap: var(--spacing_6);
    align-items: center;
  }
  .play img {
    border-radius: var(--radius_medium);
  }

  .about {
    gap: var(--spacing_4);
  }

  .social {
    gap: var(--spacing_4);
    align-self: flex-end;
  }

  .icon {
    width: 30px;
  }

  /********** Blobber **********/
  .background {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }
  .blob_1 {
    position: absolute;
    z-index: 0;
    rotate: 130deg;
    width: 200%;
    top: 16%;
    left: -43%;
  }

  /**************************************** DESKTOP ****************************************/
  @media (min-width: 800px) {
    section {
      margin: var(--spacing_7) var(--spacing_13);
    }
    .layout {
      display: grid;
      grid-template-columns: 1fr 2fr;
      gap: var(--spacing_9) 10%;
    }

    .play {
      grid-row: 1 / span 3;
      grid-column: 1 / span 1;
    }

    .about_social {
      align-items: start;
    }

    .blob_1 {
      position: absolute;
      z-index: 0;
      rotate: 20deg;
      width: 50%;
      top: 16%;
      left: 0%;
    }
  }
</style>
